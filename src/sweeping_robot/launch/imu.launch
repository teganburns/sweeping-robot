<launch>
        <!-- Load robot description and start state publisher-->
    <param name="robot_description" textfile="$(find imu)/urdf/imu.urdf" />
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />



    <node name="imu_publisher" pkg="imu" type="imu_publisher.py" respawn="false" output="screen" >
    </node>

		<!-- Start RPLIDAR sensor node which provides LaserScan data  -->
    <node name="rplidarNode" pkg="rplidar_ros" type="rplidarNode" output="screen">
        <param name="serial_port" type="string" value="/dev/ttyUSB0"/>
        <param name="serial_baudrate" type="int" value="115200"/>
        <param name="frame_id" type="string" value="laser"/>
        <param name="inverted" type="bool" value="false"/>
        <param name="angle_compensate" type="bool" value="true"/>
    </node>


   <node name="arduino" pkg="ros_arduino_python" type="arduino_node.py" output="screen">
      <rosparam file="$(find ros_arduino_python)/config/my_arduino_params.yaml" command="load" />
   </node>


		<!-- Start Google Cartographer node with custom configuration file-->
    <node name="cartographer_node" pkg="cartographer_ros" type="cartographer_node" args="
          -configuration_directory
              $(find imu)/configuration_files
          -configuration_basename cartographer_lidar_2d.lua" output="screen">
    </node>

		<!-- Additional node which converts Cartographer map into ROS occupancy grid map. Not used and can be skipped in this case -->
    <node name="cartographer_occupancy_grid_node" pkg="cartographer_ros" type="cartographer_occupancy_grid_node" args="-resolution 0.05" />



    <include file="$(find amcl)/examples/amcl_omni.launch" />

   <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find imu)/config/costmap_common_params.yaml" command="load" ns="global_costmap" /> 
    <rosparam file="$(find imu)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find imu)/config/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find imu)/config/global_costmap_params.yaml" command="load" /> 
    <rosparam file="$(find imu)/config/base_local_planner_params.yaml" command="load" />
 </node>


</launch>
